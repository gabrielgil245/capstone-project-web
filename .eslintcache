[{"C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\index.js":"1","C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\reportWebVitals.js":"2","C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\App.js":"3","C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\dashboard.js":"4"},{"size":529,"mtime":1616638624378,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":5233,"mtime":1617496891731,"results":"8","hashOfConfig":"6"},{"size":10007,"mtime":1617519795357,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"txrage",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\index.js",[],["20","21"],"C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\reportWebVitals.js",[],"C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\App.js",["22","23","24"],"import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Dashboard from \"./dashboard\";\n\nimport React, {useEffect, useState} from \"react\";\nimport { Divider, notification } from 'antd';\n\n// https://boiling-waters-15789.herokuapp.com/\n\nfunction Auth() {\n\n  let apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n  const [emailLogin, setEmailLogin] = useState('');\n  const [emailSignUp, setEmailSignUp] = useState('');\n  const [passwordLogin, setPasswordLogin] = useState('');\n  const [passwordSignUp, setPasswordSignUp] = useState('');\n  const [retypePassword, setRetypePassword] = useState('');\n\n  const onSignIn = async (event) => {\n    event.preventDefault();\n    // console.log(emailLogin);\n    // console.log(passwordLogin);\n\n    let loginBody = { \n      email: emailLogin,\n      password: passwordLogin\n    }\n\n    let options = {\n      method: 'POST',\n      body: JSON.stringify(loginBody),\n      headers: {}\n    };\n    options.headers[\"Accept\"] = \"application/json, text/plain, */*\";\n    options.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n    // console.log(options);\n    \n    const res = await fetch(`${apiUrl}/api/v1/login`, options);\n\n    let data = await res.json();\n    // console.log(data);\n    if(data.token){\n      localStorage.setItem('token', data.token);\n      window.location.href='/dashboard';\n    }\n    \n  }\n\n  const onSignUp = async (event) => {\n    event.preventDefault();\n    // console.log(emailSignUp);\n    // console.log(passwordSignUp);\n\n    let signupBody = { \n      email: emailSignUp,\n      password: passwordSignUp\n    }\n\n    let options = {\n      method: 'POST',\n      body: JSON.stringify(signupBody),\n      headers: {}\n    };\n    options.headers[\"Accept\"] = \"application/json, text/plain, */*\";\n    options.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n    // console.log(options);\n    \n    const res = await fetch(`${apiUrl}/api/v1/signup`, options);\n    \n    let data = await res.json();\n    console.log(data);\n    if(data.success){\n      notification['success']({\n        message:'Received',\n        description:\n        \"All set! You may now login using your credentials.\",\n      })\n    }\n\n  }\n\n  return (\n    <>\n      {/* Navbar */}\n      <div className={\"grid grid-cols-12 bg-gray-200\"}>\n        <h1 className={\"col-span-full text-center text-3xl bg-gray-400 p-4\"}>Login Form</h1>\n\n        {/* Log In */}\n        <div className={\"col-span-full\"}>\n          <h1 className={\"text-center text-3xl p-2\"}>Sign In</h1>\n          <form className={\"grid grid-cols-12\"} onSubmit={onSignIn}>\n            <input type=\"email\" value={emailLogin} onChange={(event) => setEmailLogin(event.currentTarget.value)} \n              required className={\"border col-start-2 col-span-10 rounded p-2 m-4\"} placeholder={\"Email address\"}/>\n            <input type=\"password\" value={passwordLogin} onChange={(event) => setPasswordLogin(event.currentTarget.value)} \n              required className={\"border col-start-2 col-span-10 rounded p-2 m-4\"} placeholder={\"Password\"}/>\n            <button htmlType={\"submit\"} \n              className={\"p-2 m-2 border col-start-5 col-span-4 bg-blue-400 hover:bg-blue-600 text-white rounded font-bold\"}>\n                Log In\n            </button>\n\n          </form>\n        </div>\n\n        <Divider className={\"col-span-full\"} />\n\n        {/* Sign Up */}\n        <div className={\"col-span-full\"}>\n          <h1 className={\"text-center text-3xl p-2\"}>Sign Up</h1>\n          <form className={\"grid grid-cols-12\"} onSubmit={onSignUp}>\n            <input type=\"email\" value={emailSignUp} onChange={(event) => setEmailSignUp(event.currentTarget.value)} \n              required className={\"border col-start-2 col-span-10 rounded p-2 m-4\"} placeholder={\"Email address\"}/>\n            <input type=\"password\" value={passwordSignUp} onChange={(event) => setPasswordSignUp(event.currentTarget.value)} \n              required className={\"border col-start-2 col-span-10 rounded p-2 m-4\"} placeholder={\"Password\"}/>\n             <input type=\"password\" value={retypePassword} onChange={(event) => setRetypePassword(event.currentTarget.value)} \n              required className={\"border col-start-2 col-span-10 rounded p-2 m-4\"} placeholder={'Retype Password'}/>\n             {(passwordSignUp != retypePassword) && <small className={'text-red-500 font-bold'}>Passwords don't match</small>}\n            <button htmlType={\"submit\"} \n              className={\"p-2 m-2 border col-start-5 col-span-4 bg-blue-400 hover:bg-blue-600 text-white rounded font-bold\"}>\n                Sign Up\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nfunction App() {\n    \n  return (\n    <>\n      <Router>\n          <div>\n              {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n              <Switch>\n                  <Route path=\"/dashboard\">\n                      <Dashboard />\n                  </Route>\n                  <Route path=\"/\">\n                      <Auth />\n                  </Route>\n              </Switch>\n          </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\gabri\\OneDrive\\Documents\\Gabriel's Documents\\Git_Repos\\Capstone Project\\capstone-project-web\\src\\dashboard.js",["25","26","27","28","29","30","31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":3,"nodeType":"40","messageId":"41","endLine":6,"endColumn":7},{"ruleId":"38","severity":1,"message":"42","line":10,"column":16,"nodeType":"40","messageId":"41","endLine":10,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":122,"column":31,"nodeType":"45","messageId":"46","endLine":122,"endColumn":33},{"ruleId":"43","severity":1,"message":"47","line":110,"column":24,"nodeType":"45","messageId":"46","endLine":110,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":177,"column":6,"nodeType":"50","endLine":177,"endColumn":8,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":181,"column":6,"nodeType":"50","endLine":181,"endColumn":24,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"54","line":185,"column":6,"nodeType":"50","endLine":185,"endColumn":24,"suggestions":"55"},{"ruleId":"43","severity":1,"message":"47","line":213,"column":63,"nodeType":"45","messageId":"46","endLine":213,"endColumn":65},{"ruleId":"43","severity":1,"message":"47","line":243,"column":58,"nodeType":"45","messageId":"46","endLine":243,"endColumn":60},{"ruleId":"43","severity":1,"message":"47","line":250,"column":29,"nodeType":"45","messageId":"46","endLine":250,"endColumn":31},{"ruleId":"43","severity":1,"message":"47","line":259,"column":47,"nodeType":"45","messageId":"46","endLine":259,"endColumn":49},{"ruleId":"43","severity":1,"message":"47","line":265,"column":35,"nodeType":"45","messageId":"46","endLine":265,"endColumn":37},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCategories' and 'fetchUserId'. Either include them or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.",["59"],"React Hook useEffect has a missing dependency: 'fetchAnswers'. Either include it or remove the dependency array.",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [fetchCategories, fetchUserId]",{"range":"67","text":"68"},"Update the dependencies array to be: [fetchQuestions, selectedCategory]",{"range":"69","text":"70"},"Update the dependencies array to be: [fetchAnswers, selectedQuestion]",{"range":"71","text":"72"},[5160,5162],"[fetchCategories, fetchUserId]",[5212,5230],"[fetchQuestions, selectedCategory]",[5278,5296],"[fetchAnswers, selectedQuestion]"]